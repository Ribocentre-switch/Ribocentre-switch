I"Ñ<html>
<head>
  <style>
    /* Ê†∑ÂºèË°®Ê†º */
    table {
      border-collapse: collapse;
      width: 100%;
    }

    th, td {
      border: 1px solid black;
      padding: 8px;
      text-align: left;
    }

    th {
      background-color: #f2f2f2;
    }

    /* ÈöêËóèÊâÄÊúâ sheet */
    .sheet {
      display: none;
    }
  </style>
</head>
<body onload="showSheet('sheet1')">
  <!-- ÊêúÁ¥¢Ê°Ü -->
  <input type="text" id="searchBox" placeholder="ÊêúÁ¥¢ÂÖ≥ÈîÆÂ≠ó..." oninput="searchSheets()" />

  <!-- ÊåâÈíÆ -->
  <button onclick="showSheet('sheet1')">Sheet 1</button>
  <button onclick="showSheet('sheet2')">Sheet 2</button>
  <button onclick="showSheet('sheet3')">Sheet 2</button>

  <!-- Ë°®Ê†º -->
  <div id="sheet1" class="sheet">
    <h2>Sheet 1</h2>
    <table>
      <tr>
        <th>name</th>
        <th>Ligand</th>
        <th>Description</th>
        <th>Discovery</th>
        <th>Rfam-name</th>
        <th>Rfam-ID</th>
      </tr>
     <tr>
        <td name="td0"><a href="https://ribocentre-switch.github.io/docs/Cobalamine" target="_blank"><b>AdoCbl</b></a></td>
        <td name="td1">Adenosylcobalamin</td>
        <td name="td2">Cobalamin riboswitch is a cis-regulatory element which is widely distributed in 5' untranslated regions of cobalamin related genes in bacteria to regulate adjacent genes related to cobalamin metabolism in response to cobalamin binding. Cobalamin riboswitches are broadly classified by the identity of the aptamer, and can be further classified into AdoCbl and AqCbl riboswitch.</td>
        <td name="td3"><a href="https://pubmed.ncbi.nlm.nih.gov/10852957/" target="_blank"><b>2000</b> </a></td>
        <td name="td4">AdoCbl riboswitch
Cobalamin riboswitch<br /></td>
        <td name="td5">RF01482
RF00174</td>
      </tr>
      <!-- ÂÖ∂‰ªñË°å... -->
    </table>
  </div>

  <div id="sheet2" class="sheet">
    <h2>Sheet 2</h2>
    <table>
      <tr>
        <th>Header 1</th>
        <th>Header 2</th>
        <th>Header 3</th>
      </tr>
      <tr>
        <td>suc</td>
        <td>Data 2</td>
        <td>test</td>
      </tr>
      <!-- ÂÖ∂‰ªñË°å... -->
    </table>
  </div>

  <div id="sheet3" class="sheet">
    <p style="font-size:20px">RNA precursors</p>
    <table>
      <tr>
        <th>name</th>
        <th>Ligand</th>
        <th>Description</th>
        <th>Discovery</th>
        <th>Rfam-name</th>
        <th>Rfam-ID</th>
      </tr>
      <tr>
        <td name="td0"><a href="https://ribocentre-switch.github.io/docs/Adenine" target="_blank"><b>Adenine</b></a></td>
        <td name="td1">Adenine</td>
        <td name="td2">Carrying an aptamer domain similar in sequence and secondary structure to the guanine riboswitch, the adenine riboswitch selectively recognizes adenine, and contains a uracil ribonucleotide in position 74 of the adenine-binding aptamer domain. <i>B. subtilis ydhL</i> (also called <i>pbuE</i>) and two RNAs (<i>add</i> genes) from <i>Clostridium perfringens</i> and <i>Vibrio vulnificus</i> harbor adenine riboswitches in their mRNA elements.</td>
        <td name="td3"><a href="https://pubmed.ncbi.nlm.nih.gov/14718920/" target="_blank"><b>2004</b> </a></td>
        <td name="td4">Purine riboswitch<br /></td>
        <td name="td5">RF00167</td>
      </tr>
    <!-- ÂÖ∂‰ªñË°å... -->
    </table>
  </div>

  <script>
    function showSheet(sheetId) {
      // ÈöêËóèÊâÄÊúâ sheet
      var sheets = document.getElementsByClassName('sheet');
      for (var i = 0; i < sheets.length; i++) {
        sheets[i].style.display = 'none';
      }

      // ÊòæÁ§∫ÈÄâÂÆöÁöÑ sheet
      var sheet = document.getElementById(sheetId);
      sheet.style.display = 'block';
    }

  function searchSheets() {
  var searchBox = document.getElementById('searchBox');
  var keyword = searchBox.value.toLowerCase();

  var sheets = document.getElementsByClassName('sheet');
  for (var i = 0; i < sheets.length; i++) {
    var sheet = sheets[i];
    var sheetTitle = sheet.getElementsByTagName('h2')[0].textContent.toLowerCase();
    var tableRows = sheet.getElementsByTagName('tr');

    // Loop through each row and cell of the sheet's table
    var showSheet = false;
    for (var j = 0; j < tableRows.length; j++) {
      var cells = tableRows[j].getElementsByTagName('td');
      for (var k = 0; k < cells.length; k++) {
        var cellText = cells[k].textContent.toLowerCase();
        if (cellText.includes(keyword)) {
          showSheet = true;
          break;
        }
      }
    }

    // Show or hide the sheet based on whether the keyword was found
    if (sheetTitle.includes(keyword) || showSheet) {
      sheet.style.display = 'block';
    } else {
      sheet.style.display = 'none';
    }
  }
}

  </script>
</body>
</html>

:ET